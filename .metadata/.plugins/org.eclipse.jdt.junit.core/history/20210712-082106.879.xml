<?xml version="1.0" encoding="UTF-8"?><testrun name="EmployeeSalariesReportServiceTest.shouldGenerateSalaryReport" project="module01-question01" tests="1" started="1" failures="1" errors="0" ignored="0">
  <testcase name="shouldGenerateSalaryReport" classname="com.spring.professional.exam.tutorial.module01.question01.manual.dependency.injection.EmployeeSalariesReportServiceTest" time="1.178">
    <failure>
      <expected>salaryReport.writeReport(employeeSalaries);</expected>
      <actual>salaryReport.writeReport([]);
</actual>
      Argument(s) are different! Wanted:
salaryReport.writeReport(employeeSalaries);
-&gt; at com.spring.professional.exam.tutorial.module01.question01.manual.dependency.injection.EmployeeSalariesReportServiceTest.shouldGenerateSalaryReport(EmployeeSalariesReportServiceTest.java:46)
Actual invocations have different arguments:
salaryReport.writeReport([]);
-&gt; at com.spring.professional.exam.tutorial.module01.question01.manual.dependency.injection.EmployeeSalariesReportService.generateReport(EmployeeSalariesReportService.java:36)
&#13;
	at com.spring.professional.exam.tutorial.module01.question01.manual.dependency.injection.EmployeeSalariesReportServiceTest.shouldGenerateSalaryReport(EmployeeSalariesReportServiceTest.java:46)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:55)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:100)&#13;
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:107)&#13;
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:41)&#13;
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:768)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;

    </failure>
  </testcase>
</testrun>
